- content_for :page_title do
  = t('admin.instances.title')

- content_for :heading_actions do
  - if limited_federation_mode?
    = link_to t('admin.domain_allows.add_new'), new_admin_domain_allow_path, class: 'button', id: 'add-instance-button'
    = link_to t('admin.domain_allows.export'), export_admin_export_domain_allows_path(format: :csv), class: 'button'
    = link_to t('admin.domain_allows.import'), new_admin_export_domain_allow_path, class: 'button'
  - else
    = link_to t('admin.domain_blocks.add_new'), new_admin_domain_block_path, class: 'button', id: 'add-instance-button'
    = link_to t('admin.domain_blocks.export'), export_admin_export_domain_blocks_path(format: :csv), class: 'button'
    = link_to t('admin.domain_blocks.import'), new_admin_export_domain_block_path, class: 'button'

.filters
  .filter-subset
    %strong= t('admin.instances.moderation.title')
    %ul
      %li= filter_link_to t('admin.instances.moderation.all'), limited: nil

      - unless limited_federation_mode?
        %li= filter_link_to t('admin.instances.moderation.limited'), limited: '1'

  .filter-subset
    %strong= t('admin.instances.availability.title')
    %ul
      %li= filter_link_to t('admin.instances.delivery.all'), availability: nil
      %li= filter_link_to t('admin.instances.delivery.failing'), availability: 'failing'
      %li= filter_link_to t('admin.instances.delivery.unavailable'), availability: 'unavailable'

- unless limited_federation_mode?
  = form_with url: admin_instances_url, method: :get, class: :simple_form do |form|
    .fields-group
      - InstanceFilter::KEYS.each do |key|
        = form.hidden_field key, value: params[key] if params[key].present?

      - %i(by_domain).each do |key|
        .input.string.optional
          = form.text_field key,
                            value: params[key],
                            class: 'string optional',
                            placeholder: I18n.t("admin.instances.#{key}")

      .actions
        %button.button= t('admin.accounts.search')
        = link_to t('admin.accounts.reset'), admin_instances_path, class: 'button negative'

%hr.spacer/

- if @instances.empty?
  .muted-hint.center-text
    = t 'admin.instances.empty'
- else
  = render partial: 'instance', collection: @instances

= paginate @instances
