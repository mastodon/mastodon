- content_for :page_title do
  = @instance.domain

- if current_user.can?(:view_dashboard)
  - content_for :heading_actions do
    = date_range(@time_period)

  - if @instance.persisted?
    = render 'dashboard', instance_domain: @instance.domain, period_end_at: @time_period.last, period_start_at: @time_period.first
  - else
    %p
      = t('admin.instances.unknown_instance')

%hr.spacer/

%h3= t('admin.instances.content_policies.title')

- if limited_federation_mode?
  %p= t('admin.instances.content_policies.limited_federation_mode_description_html')

  - if @instance.domain_allow
    = link_to t('admin.domain_allows.undo'), admin_domain_allow_path(@instance.domain_allow), class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }
  - else
    = link_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: 'button', method: :post
- else
  %p= t('admin.instances.content_policies.description_html')

  - if @instance.domain_block
    .table-wrapper
      %table.table.horizontal-table
        %tbody
          %tr
            %th= t('admin.instances.content_policies.comment')
            %td= @instance.domain_block.private_comment
          %tr
            %th= t('admin.instances.content_policies.reason')
            %td= @instance.domain_block.public_comment
          %tr
            %th= t('admin.instances.content_policies.policy')
            %td= @instance.domain_block.policies.map { |policy| t(policy, scope: 'admin.instances.content_policies.policies') }.join(' Â· ')

    = link_to t('admin.domain_blocks.edit'), edit_admin_domain_block_path(@instance.domain_block), class: 'button'
    = link_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: 'button', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }
  - else
    = link_to t('admin.domain_blocks.add_new'), new_admin_domain_block_path(_domain: @instance.domain), class: 'button'

- if @instance.persisted?
  %hr.spacer/

  %h3= t('admin.instances.audit_log.title')
  - if @action_logs.empty?
    %p= t('accounts.nothing_here')
  - else
    .report-notes
      = render partial: 'admin/action_logs/action_log', collection: @action_logs
    = link_to t('admin.instances.audit_log.view_all'), admin_action_logs_path(target_domain: @instance.domain), class: 'button'

  %hr.spacer/

  %h3= t('admin.instances.availability.title')

  %p
    = t('admin.instances.availability.description_html', count: DeliveryFailureTracker::FAILURE_DAYS_THRESHOLD)

  .availability-indicator
    %ul.availability-indicator__graphic
      - @instance.availability_over_days(14).each do |(date, failing)|
        %li.availability-indicator__graphic__item{ class: failing ? 'negative' : 'neutral', title: l(date) }
    .availability-indicator__hint
      - if @instance.unavailable?
        %span.negative-hint
          = t('admin.instances.availability.failure_threshold_reached', date: l(@instance.unavailable_domain.created_at.to_date))
          = link_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }
      - elsif @instance.exhausted_deliveries_days.empty?
        %span.positive-hint
          = t('admin.instances.availability.no_failures_recorded')
          = link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }
      - else
        %span.negative-hint
          = t('admin.instances.availability.failures_recorded', count: @instance.delivery_failure_tracker.days)
          %span= link_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post } unless @instance.exhausted_deliveries_days.empty?
          %span= link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }

  - if @instance.purgeable?
    %p= t('admin.instances.purge_description_html')

    = link_to t('admin.instances.purge'), admin_instance_path(@instance), data: { confirm: t('admin.instances.confirm_purge'), method: :delete }, class: 'button button--destructive'
