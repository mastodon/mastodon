- content_for :page_title do
  = t('doorkeeper.authorized_applications.index.title')

%p= t('doorkeeper.authorized_applications.index.description_html')

%hr.spacer/

.applications-list
  - @applications.each do |application|
    .applications-list__item{ id: dom_id(application) }
      - if application.website.present?
        = link_to application.name, application.website, target: '_blank', rel: 'noopener noreferrer', class: 'announcements-list__item__title'
      - else
        %strong.announcements-list__item__title
          = application.name
          - if application.superapp?
            %span.information-badge.superapp= t('doorkeeper.authorized_applications.index.superapp')

      .announcements-list__item__action-bar
        .announcements-list__item__meta
          - if @last_used_at_by_app[application.id]
            = t('doorkeeper.authorized_applications.index.last_used_at', date: l(@last_used_at_by_app[application.id].to_date))
          - else
            = t('doorkeeper.authorized_applications.index.never_used')

          Â·

          = t('doorkeeper.authorized_applications.index.authorized_at', date: l(application.created_at.to_date))

        - unless application.superapp? || current_account.unavailable?
          %div
            = table_link_to 'close', t('doorkeeper.authorized_applications.buttons.revoke'), oauth_authorized_application_path(application), method: :delete, data: { confirm: t('doorkeeper.authorized_applications.confirmations.revoke') }

      .announcements-list__item__permissions
        %ul.permissions-list
          - grouped_scopes(application.scopes).each do |scope|
            %li.permissions-list__item
              .permissions-list__item__icon
                = material_symbol('check')
              .permissions-list__item__text
                .permissions-list__item__text__title
                  = t(scope.key, scope: [:doorkeeper, :grouped_scopes, :title])
                .permissions-list__item__text__type
                  = t(scope.access, scope: [:doorkeeper, :grouped_scopes, :access])
