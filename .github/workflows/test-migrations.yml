name: Historical data migration test

on:
  merge_group:
  push:
    branches:
      - 'main'
      - 'stable-*'
    paths:
      - 'Gemfile*'
      - '.ruby-version'
      - '**/*.rb'
      - '.github/workflows/test-migrations.yml'
      - 'lib/tasks/tests.rake'
      - 'lib/tasks/db.rake'

  pull_request:
    paths:
      - 'Gemfile*'
      - '.ruby-version'
      - '**/*.rb'
      - '.github/workflows/test-migrations.yml'
      - 'lib/tasks/tests.rake'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mastodon_test
        options: >-
          --health-cmd="pg_isready -U postgres -d mastodon_test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/mastodon_test
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: mastodon_test
      BUNDLE_CLEAN: true
      BUNDLE_FROZEN: true
      BUNDLE_WITHOUT: 'development:production'
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby environment
        uses: ./.github/actions/setup-ruby

      - name: Warten bis Postgres bereit ist
        run: |
          until pg_isready -h localhost -U postgres -d mastodon_test; do sleep 1; done
        env:
          PGPASSWORD: postgres

      - name: (Fallback) DB-Rolle root anlegen, falls ben√∂tigt
        run: |
          psql -h localhost -U postgres -d postgres -tc "SELECT 1 FROM pg_roles WHERE rolname='root'" | grep -q 1 || \
          psql -h localhost -U postgres -d postgres -c "CREATE ROLE root LOGIN SUPERUSER PASSWORD 'root';"
        env:
          PGPASSWORD: postgres

      - name: Tests
        run: bundle exec rake db:prepare && bundle exec rspec
